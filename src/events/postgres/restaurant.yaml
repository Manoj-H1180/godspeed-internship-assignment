# ONE
/postgres/restaurant/:id.http.get:
  summary: Fetch Restaurant
  description: Fetch Restaurant from database
  fn: com.biz.postgres.restaurant.one
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# CREATE
/postgres/restaurant.http.post:
  summary: Create a new Restaurant
  description: Create Restaurant from database
  fn: com.biz.postgres.restaurant.create
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgres/Restaurant'
  responses:
    content:
      application/json:
        schema:
          type: object

# UPDATE
/postgres/restaurant/:id.http.put:
  summary: Update a Restaurant
  description: Update Restaurant from database
  fn: com.biz.postgres.restaurant.update
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgres/Restaurant'
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# DELETE
/postgres/restaurant/:id.http.delete:
  summary: Delete a Restaurant
  description: Delete Restaurant from database
  fn: com.biz.postgres.restaurant.delete
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# SEARCH
/postgres/restaurant/search.http.post:
  summary: Fetch restaurants of a particular city with menu items
  description: Fetches restaurants of a particular city from the database and includes menu items in the response. Menu items can be filtered by a provided coupon code.
  fn: com.biz.postgres.restaurant.search
  body:
    content:
      application/json:
        schema:
          type: object
          properties:
            city:
              type: string
            couponCode:
              type: string
  responses:
    content:
      application/json:
        schema:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              location:
                type: string
              menuItems:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description: 
                      type: string
                    price:
                      type: integer
                    couponCode:
                      type: string
